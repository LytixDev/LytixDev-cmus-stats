#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Copyright 2022 Nicolai Brand
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, see <http://www.gnu.org/licenses/>.

from get_stats import fetch_x

MAX_BAR_LEN = 40


def _terminal_bar_chart(labels, values, pfix=False):
    max_value = max(values)
    scaled_values = [int(MAX_BAR_LEN / (max_value / i)) if i != 0 else 0 for i in values]

    for (i, (val, label)) in enumerate(zip(scaled_values, labels)):
        if not pfix:
            print(f"{label}: {'#' * val}")
        else:
            print(f"{label}: {'#' * val} {' ' * (MAX_BAR_LEN - val)} {values[i]}h")


def listening_clock():
    hours = {k+1:0 for k in range(0, 24)}
    for data in fetch_x("hour"):
        hours[data[0]] += 1

    total_hours = sum(hours.values())
    print("\nTotal hours listened: ", total_hours, "\n")

    #names = [f"{k-1:02}-{k:02}" for k in hours.keys()]
    names = [f"{k-1:02}am" if k < 12 + 1 else f"{k-1:02}pm" for k in hours.keys()]
    values = list(hours.values())
    _terminal_bar_chart(names, values, pfix=True)


if __name__ == "__main__":
    listening_clock()
